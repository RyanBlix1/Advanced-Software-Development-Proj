trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: 'Build and Test Stage'
  jobs:
  - job: build_and_test
    displayName: 'Build and Test'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'  # This will install Node.js 20.x
      displayName: 'Set up Node.js'

    - script: |
        npm install
      displayName: 'Install dependencies'

    - script: |
        npm run build-css
      displayName: 'Build CSS'

    - script: |
        ls -R $(Build.SourcesDirectory) || echo "No files found in the project directory"
      displayName: 'Verify project directory contents'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/application.zip'
        replaceExistingArchive: true
        tarCompression: gz
        additionalArguments: '--exclude=node_modules'
      displayName: 'Archive project as .zip'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/application.zip'
        artifactName: 'app'
      displayName: 'Publish application as pipeline artifact'

- stage: Deploy
  displayName: 'Deploy the web application'
  dependsOn: Build
  jobs:
    - deployment: Deploy
      pool:
        vmImage: 'ubuntu-20.04'
      environment: Production
      strategy:
        runOnce:
          deploy:
            steps:
              - download: current
                artifact: app

              - task: AzureWebApp@1
                displayName: 'Azure App Service Deploy: website'
                inputs:
                  azureSubscription: 'IncidentRS'
                  appName: 'IncidentRS'
                  package: '$(Pipeline.Workspace)/app/application.zip'

                  